<deployment-project plugin="plugin.ezdeploy" plugin-version="1.0">
  <configuration file="E:\github\PhotonDesk-App\app\PhotonDesk.prj" location="E:\github\PhotonDesk-App\app" name="PhotonDesk" target="target.ezdeploy.standalone" target-name="Application Compiler">
    <param.appname>PhotonDesk</param.appname>
    <param.icon>${PROJECT_ROOT}\PhotonDesk_resources\icon.ico</param.icon>
    <param.icons>
      <file>${PROJECT_ROOT}\PhotonDesk_resources\icon_48.png</file>
      <file>${PROJECT_ROOT}\PhotonDesk_resources\icon_32.png</file>
      <file>${PROJECT_ROOT}\PhotonDesk_resources\icon_24.png</file>
      <file>${PROJECT_ROOT}\PhotonDesk_resources\icon_16.png</file>
    </param.icons>
    <param.version>1.0</param.version>
    <param.authnamewatermark>Guilherme Ribeiro Silveira</param.authnamewatermark>
    <param.email>guilhermeribeiro201342@gmail.com</param.email>
    <param.company>GEDRE-UFSM</param.company>
    <param.summary>Spectral analyzer and converter with photometric, radiometric, and colorimetric metrics.</param.summary>
    <param.description>Photon Desk is an interactive tool designed to analyze light spectra and extract key metrics such as luminous flux, radiant power, chromaticity coordinates, CCT, FWHM, color purity, and more.

The app supports .txt, .csv, and .mat spectral files, automatically validates and interprets the structure, and computes relevant quantities with high accuracy. It also allows seamless conversions between various light units (lm, W, Î¼mol/s) and area-based metrics (lux, PPFD).

Ideal for lab analysis, LED characterization, photobiology research, and educational purposes.

Key Features:

    Automatic calculation of lm, W, PPF, FWHM, CCT, chromaticity (x, y, u, v)

    Spectrum plotting with human eye and PAR reference curves

    Simple and intuitive GUI

    Compatible with MATLAB Runtime for license-free deployment

Photon Desk was validated using real measurements from an integrating sphere and provides results consistent with laboratory-grade equipment.</param.description>
    <param.screenshot>${PROJECT_ROOT}\images\logo_app.png</param.screenshot>
    <param.guid />
    <param.installpath.string>\GEDRE-UFSM\PhotonDesk\</param.installpath.string>
    <param.installpath.combo>option.installpath.programfiles</param.installpath.combo>
    <param.logo />
    <param.install.notes />
    <param.target.install.notes />
    <param.intermediate>${PROJECT_ROOT}\PhotonDesk\for_testing</param.intermediate>
    <param.files.only>${PROJECT_ROOT}\PhotonDesk\for_redistribution_files_only</param.files.only>
    <param.output>${PROJECT_ROOT}\PhotonDesk\for_redistribution</param.output>
    <param.logdir>${PROJECT_ROOT}\PhotonDesk</param.logdir>
    <param.enable.clean.build>false</param.enable.clean.build>
    <param.user.defined.mcr.options />
    <param.target.type>subtarget.standalone</param.target.type>
    <param.support.packages />
    <param.web.mcr>true</param.web.mcr>
    <param.package.mcr>false</param.package.mcr>
    <param.no.mcr>false</param.no.mcr>
    <param.web.mcr.name>PhotonDeskApp</param.web.mcr.name>
    <param.package.mcr.name>MyAppInstaller_mcr</param.package.mcr.name>
    <param.no.mcr.name>MyAppInstaller_app</param.no.mcr.name>
    <param.windows.command.prompt>true</param.windows.command.prompt>
    <param.create.log>false</param.create.log>
    <param.log.file />
    <param.native.matlab>false</param.native.matlab>
    <param.checkbox>false</param.checkbox>
    <param.example />
    <param.help.text>Syntax 
	  -? 
	 
 Input Arguments 
	 -?  print help on how to use the application 
	 input arguments</param.help.text>
    <unset>
      <param.version />
      <param.guid />
      <param.installpath.string />
      <param.installpath.combo />
      <param.logo />
      <param.install.notes />
      <param.target.install.notes />
      <param.intermediate />
      <param.files.only />
      <param.output />
      <param.logdir />
      <param.enable.clean.build />
      <param.user.defined.mcr.options />
      <param.target.type />
      <param.support.packages />
      <param.web.mcr />
      <param.package.mcr />
      <param.no.mcr />
      <param.package.mcr.name />
      <param.no.mcr.name />
      <param.windows.command.prompt />
      <param.create.log />
      <param.log.file />
      <param.native.matlab />
      <param.checkbox />
      <param.example />
    </unset>
    <fileset.main>
      <file>${PROJECT_ROOT}\spectrum_converter_app.mlapp</file>
    </fileset.main>
    <fileset.resources />
    <fileset.package>
      <file>${PROJECT_ROOT}\logo_gedre.png</file>
    </fileset.package>
    <fileset.depfun>
      <file>${PROJECT_ROOT}\logo_gedre.png</file>
    </fileset.depfun>
    <build-deliverables>
      <file location="${PROJECT_ROOT}\PhotonDesk\for_testing" name="splash.png" optional="false">E:\github\PhotonDesk-App\app\PhotonDesk\for_testing\splash.png</file>
      <file location="${PROJECT_ROOT}\PhotonDesk\for_testing" name="PhotonDesk.exe" optional="false">E:\github\PhotonDesk-App\app\PhotonDesk\for_testing\PhotonDesk.exe</file>
      <file location="${PROJECT_ROOT}\PhotonDesk\for_testing" name="readme.txt" optional="true">E:\github\PhotonDesk-App\app\PhotonDesk\for_testing\readme.txt</file>
    </build-deliverables>
    <workflow />
    <matlab>
      <root>D:\Matlab911Win</root>
      <toolboxes />
    </matlab>
    <platform>
      <unix>false</unix>
      <mac>false</mac>
      <windows>true</windows>
      <win2k>false</win2k>
      <winxp>false</winxp>
      <vista>false</vista>
      <linux>false</linux>
      <solaris>false</solaris>
      <osver>10.0</osver>
      <os32>false</os32>
      <os64>true</os64>
      <arch>win64</arch>
      <matlab>true</matlab>
    </platform>
  </configuration>
</deployment-project>